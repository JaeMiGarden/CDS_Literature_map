extends layouts/map

block content
    div(id="map")
    script(type="text/javascript"  src="//dapi.kakao.com/v2/maps/sdk.js?appkey=ac565ac691559f4a03471d5f88e788e8")
    script.
        var checkFlag = false;
        var mapContainer = document.getElementById('map'), // 지도를 표시할 div  
            mapOption = { 
                center: new kakao.maps.LatLng(37.551311, 126.945565), // 지도의 중심좌표
                level: 1 // 지도의 확대 레벨
            };

        var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다
        
        var positions = [];
        $(document).ready(function(){$.ajax({
            async:false,
            type:"POST",
        url:"/api/board",
        success:function(res) {
            res.map((a)=>{
                positions.push({
                    content: `<a href=/board/${a._id}>${a.title}</div>`,
                    latlng: new kakao.maps.LatLng(a.latitude, a.longitude)
                });
            })
            checkFlag = true;
        }});
        });
        
        if(checkFlag === true){
            for (var i = 0; i < positions.length; i ++) {
                var marker = new kakao.maps.Marker({
                    map: map, // 마커를 표시할 지도
                    position: positions[i].latlng // 마커의 위치
                });

                var infowindow = new kakao.maps.InfoWindow({
                    content: positions[i].content // 인포윈도우에 표시할 내용
                });
                kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));
                kakao.maps.event.addListener(marker, 'click', makeOutListener(infowindow));
            }
        }
        kakao.maps.event.addListener(map, 'click', (mouseEvent)=>{
            location.href="/board/write";
            var latlng = mouseEvent.latLng;
            console.log(latlng);
        })
        function makeOverListener(map, marker, infowindow) {
            return function() {
                infowindow.open(map, marker);
            };
        }

        function makeOutListener(infowindow) {
            return function() {
                infowindow.close();
            };
